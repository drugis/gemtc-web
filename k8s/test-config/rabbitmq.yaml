---
# Source: rabbitmq/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: rabbitmq
  namespace: drugis-test
  labels:
    app: rabbitmq
    chart: rabbitmq-4.0.1
    release: 'rabbit'
    heritage: 'Tiller'
type: Opaque
data:
  rabbitmq-erlang-cookie: 'UEJBZlZSVWlmV2JBOWttR1ZZUlFhUHJwWTRDd3g3U3U='
---
# Source: rabbitmq/templates/configuration.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: rabbitmq-config
  namespace: drugis-test
  labels:
    app: rabbitmq
    chart: rabbitmq-4.0.1
    release: 'rabbit'
    heritage: 'Tiller'
data:
  enabled_plugins: |-
    [rabbitmq_management].
  rabbitmq.conf: |-
    ##username and password
    default_user=guest
    default_pass=develop
    ## Clustering
    cluster_partition_handling = autoheal
    ## queue master locator
    queue_master_locator=min-masters
    ## enable guest user
    loopback_users.guest = false
---
# Source: rabbitmq/templates/svc-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq-headless
  namespace: drugis-test
  labels:
    app: rabbitmq
    chart: rabbitmq-4.0.1
    release: 'rabbit'
    heritage: 'Tiller'
spec:
  clusterIP: None
  ports:
    - name: epmd
      port: 4369
      targetPort: epmd
    - name: amqp
      port: 5672
      targetPort: amqp
    - name: dist
      port: 25672
      targetPort: dist
    - name: stats
      port: 15672
      targetPort: stats
  selector:
    app: rabbitmq
    release: 'rabbit'
---
# Source: rabbitmq/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
  namespace: drugis-test
  labels:
    app: rabbitmq
    chart: rabbitmq-4.0.1
    release: 'rabbit'
    heritage: 'Tiller'
spec:
  type: ClusterIP
  ports:
    - name: epmd
      port: 4369
      targetPort: epmd
    - name: amqp
      port: 5672
      targetPort: amqp
    - name: dist
      port: 25672
      targetPort: dist
    - name: stats
      port: 15672
      targetPort: stats
  selector:
    app: rabbitmq
    release: 'rabbit'
---
# Source: rabbitmq/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: rabbitmq
  namespace: drugis-test
  labels:
    app: rabbitmq
    chart: rabbitmq-4.0.1
    release: 'rabbit'
    heritage: 'Tiller'
spec:
  serviceName: rabbitmq-headless
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
      release: 'rabbit'
  template:
    metadata:
      labels:
        app: rabbitmq
        release: 'rabbit'
        chart: rabbitmq-4.0.1
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: rabbitmq
          image: docker.io/bitnami/rabbitmq:3.7.9
          imagePullPolicy: 'IfNotPresent'
          command:
            - bash
            - -ec
            - |
              mkdir -p /opt/bitnami/rabbitmq/.rabbitmq/
              mkdir -p /opt/bitnami/rabbitmq/etc/rabbitmq/
              #persist the erlang cookie in both places for server and cli tools
              echo $RABBITMQ_ERL_COOKIE > /opt/bitnami/rabbitmq/var/lib/rabbitmq/.erlang.cookie
              cp /opt/bitnami/rabbitmq/var/lib/rabbitmq/.erlang.cookie /opt/bitnami/rabbitmq/.rabbitmq/
              #change permission so only the user has access to the cookie file
              chmod 600 /opt/bitnami/rabbitmq/.rabbitmq/.erlang.cookie /opt/bitnami/rabbitmq/var/lib/rabbitmq/.erlang.cookie
              #copy the mounted configuration to both places
              cp  /opt/bitnami/rabbitmq/conf/* /opt/bitnami/rabbitmq/etc/rabbitmq
              # Apply resources limits
              ulimit -n "${RABBITMQ_ULIMIT_NOFILES}"
              #replace the default password that is generated
              sed -i "s/CHANGEME/$RABBITMQ_PASSWORD/g" /opt/bitnami/rabbitmq/etc/rabbitmq/rabbitmq.conf
              exec rabbitmq-server
          volumeMounts:
            - name: config-volume
              mountPath: /opt/bitnami/rabbitmq/conf
            - name: data
              mountPath: /opt/bitnami/rabbitmq/var/lib/rabbitmq/
          ports:
            - name: epmd
              containerPort: 4369
            - name: amqp
              containerPort: 5672
            - name: dist
              containerPort: 25672
            - name: stats
              containerPort: 15672
          livenessProbe:
            exec:
              command:
                [
                  'sh',
                  '-c',
                  'test "$(curl -sS -f --user guest:$RABBITMQ_PASSWORD 127.0.0.1:15672/api/healthchecks/node)" = ''{"status":"ok"}'''
                ]
            initialDelaySeconds: 120
            timeoutSeconds: 5
            periodSeconds: 5
            failureThreshold: 6
            successThreshold: 1
          readinessProbe:
            exec:
              command:
                [
                  'sh',
                  '-c',
                  'test "$(curl -sS -f --user guest:$RABBITMQ_PASSWORD 127.0.0.1:15672/api/healthchecks/node)" = ''{"status":"ok"}'''
                ]
            initialDelaySeconds: 10
            timeoutSeconds: 3
            periodSeconds: 5
            failureThreshold: 3
            successThreshold: 1
          env:
            - name: RABBITMQ_ULIMIT_NOFILES
              value: '65536'
            - name: RABBITMQ_USE_LONGNAME
              value: 'true'
            - name: RABBITMQ_ERL_COOKIE
              valueFrom:
                secretKeyRef:
                  name: rabbitmq
                  key: rabbitmq-erlang-cookie
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: passwords
                  key: rabbit-password
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
      volumes:
        - name: config-volume
          configMap:
            name: rabbitmq-config
            items:
              - key: rabbitmq.conf
                path: rabbitmq.conf
              - key: enabled_plugins
                path: enabled_plugins
        - name: data
          emptyDir: {}
